package com.test.test;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public class CountOfWaysToReachSumMainClass {

    public static void main( final String[] args ) {
        final Scanner scanner = new Scanner(System.in);
        final String input = scanner.nextLine();
        final int sum = Integer.parseInt(input.trim());
        final int nWays = CountOfWaysToReachSumMainClass.findTheCountOfWaysToReachSum(sum);
        System.out.println("Ways: " + nWays);
    }

    private static int findTheCountOfWaysToReachSum( final int sum ) {
        final List<Integer> denominationTable = CountOfWaysToReachSumMainClass.initializeDenominationTable(sum);
        final List<Integer> denominations = Arrays.asList(3, 5, 10);
        denominations.forEach(denomination -> {
            IntStream.range(denomination, 1 + sum)
                .forEach(i -> denominationTable.set(i, denominationTable.get(i) + denominationTable.get(i - denomination)));
        });
        return denominationTable.get(sum);
    }

    private static List<Integer> initializeDenominationTable( final int sum ) {
        return IntStream.range(0, 1 + sum)
            .boxed()
            .map(i -> {
                if ( 0 == i ) { return 1; }
                else { return 0; }
            })
            .collect(Collectors.toList());
    }
}
